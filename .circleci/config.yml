version: 2

defaults: &defaults
  working_directory: ~/project/react-stick
  docker:
    - image: circleci/node:8-browsers
      environment:
        CHROME_BIN: "/usr/bin/google-chrome"

attach_workspace: &attach_workspace
  attach_workspace:
      at: ~/project

restore_cache: &restore_cache
  restore_cache:
    name: Restore node_modules cache
    keys:
      - v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v1-node-{{ .Branch }}-
      - v1-node-

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save yarn cache
          key: v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - .cache/yarn
      - save_cache:
          name: Save node_modules cache
          key: v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run:
          name: Remove node_modules to cleanup workspace
          command: rm -r node_modules/
      - persist_to_workspace:
          root: ~/project
          paths:
            - react-stick

  lint:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Lint
          command: yarn lint

  flow:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Flow
          command: yarn flow

  test:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Test
          command: |
            yarn test:coverage
      - run:
          name: Codecov
          command: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  qa:
    jobs:
      - install
      - lint:
          requires:
            - install
      - flow:
          requires:
            - install
      - test:
          requires:
            - install

  # On master and if tests passed, parse the commit history to see if a new release should happen
  # If yes, publish to npm and tag a release on GitHub
  # release:
  #   working_directory: ~/react-stick
  #   docker:
  #     - image: circleci/node:8
  #   steps:
  #     - run: node -v; npm -v
  #     - checkout
  #     - *restore_cache
  #     - run: npm install
  #     - *save_cache
  #     - run: npm run build
  #     - run: npm run semantic-release